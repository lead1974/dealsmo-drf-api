name: dealsmo-backend
services:
  x-backend-base: &backend_base
    build:
      context: .
      dockerfile: ./docker/production/django/Dockerfile
    image: dealsmo_backend
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    env_file:
      - ./.envs/.env.production
    networks:
      - reverseproxy_nw

  backend:
    <<: *backend_base
    container_name: dealsmo-backend
    depends_on:
      - postgres
      - redis
      - celeryworker
      - es
    command: ["/wait-for-it.sh", "postgres:5432", "--", "/start"]

  postgres:
    container_name: dealsmo-postgres
    image: dealsmo_postgres_database
    build:
      context: .
      dockerfile: ./docker/production/postgres/Dockerfile
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.env.production
    networks:
      - reverseproxy_nw

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: dealsmo-es
    platform: linux/amd64  # Use x86 emulation for stability
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false  # Important for DRF to connect without authentication
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      - reverseproxy_nw

  redis:
    image: redis:7.0-alpine3.19
    command: redis-server --appendonly yes
    container_name: dealsmo_redis
    volumes:
      - dealsmo_redis_data:/data
    networks:
      - reverseproxy_nw

  celeryworker:
    <<: *backend_base
    image: dealsmo_celeryworker
    container_name: dealsmo_celeryworker
    depends_on:
      - redis
      - postgres
    command: /start-celeryworker
    networks:
      - reverseproxy_nw

  celerybeat:
    <<: *backend_base
    image: dealsmo_celerybeat
    container_name: dealsmo_celerybeat
    depends_on:
      - redis
      - postgres
    command: /start-celerybeat
    networks:
      - reverseproxy_nw

  flower:
    <<: *backend_base
    image: dealsmo_flower
    container_name: dealsmo_flower
    depends_on:
      - redis
      - celeryworker
    command: /start-flower
    volumes:
      - flower_data:/data
    ports:
      - "5555:5555"
    networks:
      - reverseproxy_nw

networks:
  reverseproxy_nw:
    external: true

volumes:
  static_volume:
  media_volume:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  dealsmo_redis_data: {}
  flower_data: {}